#+title: NixOS Setup
#+property: header-args:nix

* Partitioning and mounting

Download script: ~curl https://raw.githubusercontent.com/phrmendes/bkps/main/installation-setup.sh --output installation-setup.sh~

#+begin_src shell :tangle ./installation-setup.sh

#!/usr/bin/env bash

# variables

GITHUB_URL="https://raw.githubusercontent.com/phrmendes/bkps/main"

# create partitions
sudo parted /dev/sda -- mklabel gpt
sudo parted /dev/sda -- mkpart primary 512MiB 100% # main partition
sudo parted /dev/sda -- mkpart ESP fat32 1Mib 512MiB # efi
sudo parted /dev/sda -- set 2 esp on

# encryption
sudo cryptsetup luksFormat /dev/sda1

# open encrypted partition
sudo cryptsetup luksOpen /dev/sda1 cryptroot

# format partitions
sudo mkfs.fat -F 32 -n boot /dev/sda2
sudo mkfs.ext4 -L nixos /dev/mapper/cryptroot

# mounting partitions
sudo mount /dev/disk/by-label/nixos /mnt
sudo mkdir -p /mnt/boot/efi
sudo mount /dev/sda2 /mnt/boot

# generate *.nix files
sudo nixos-generate-config --root /mnt

#+end_src

* configuration.nix

#+begin_src nix :tangle ./configuration.nix

{ config, pkgs, ... }:

{
  imports =
    [
      ./hardware-configuration.nix
    ];

  fileSystems."/".options = [ "noatime" "nodiratime" "discard" ];

  boot = {
    loader = {
      grub = {
        enable = true;
        version = 2;
        efiSupport = true;
        devices = [ "nodev" ];
        gfxmodeEfi = "1024x768";
        configurationLimit = 5; # number of listed generations in grub
      };
      efi = {
        efiSysMountPoint = "/boot/efi";
        canTouchEfiVariables = true;
      };
      timeout = 5;
    };
    kernelPackages = pkgs.linuxPackages_latest;
  };

  networking = {
    hostName = "nixos";
    networkmanager.enable = true;  # for pc
    # wireless.enable = true; # for laptop
  };

  time.timeZone = "America/Sao_Paulo";

  i18n.defaultLocale = "en_US.UTF-8";

  console = {
    font = "Lat2-Terminus16";
    keyMap = "us";
  };

  fonts.fonts = with pkgs; [
    (nerdfonts.override { fonts = [ "SourceCodePro" ]; })
  ];

  services = {
    openssh.enable = true;
    xserver = {
      enable = true;
      layout = "us,br";
      desktopManager.xfce.enable = true;
      displayManager = {
        defaultSession = "xfce+bspwm";
        greeters.pantheon.enable = true
      };
    };
    windowManager.bspwm.enable = true;
    # for laptop
    # libinput = {
    #   enable = true;
    #   tapping = true;
    #   naturalScrolling = true;
    # }
  };

  sound = {
    enable = true;
    mediaKeys.enable = true;
  };

  hardware = {
    pulseaudio = {
      enable = true;
      package = pkgs.pulseaudioFull;
      extraConfig = ''
        load-module module-switch-on-connect
      '';
    };
    bluetooth = {
      enable = true;
      hsphfpd.enable = true;
      settings = {
        General = {
          Enable = "Source,Sink,Media,Socket";
        };
      };
    };
  };

  users.users.phrmendes = {
    isNormalUser = true;
    uid = 1000;
    extraGroups = [ "wheel" "video" "audio" "networkmanager" ];
    initialPassword = "password";
    shell = pkgs.fish;
    useDefaultSHell = false
  };

  enviroment = {
    pathsToLink = ["/share/fish"];
    shells = [ pkgs.fish ];
  }

  nixpkgs.config.allowUnfree = true;

  system.stateVersion = "22.05";
}

#+end_src

* Placing *.nix files

#+begin_src shell :tangle ./installation-setup.sh

# downloading configuration.nix file
sudo curl "$GITHUB_URL/configuration.nix" --output /mnt/etc/nixos/configuration.nix

# adding swap
sudo sed -i 's/swapDevices = \[ \];/swapDevices = \[\{device = "\/swapfile"; size = 10000;\}\];/g' /mnt/etc/nixos/hardware-configuration.nix

#+end_src

* Installation

1) ~sudo nixos-install~
2) ~nixos-rebuild switch~ after applying changes to the ~configuration.nix~ file

* home.nix

#+begin_src nix :tangle ./home.nix

#+end_src
