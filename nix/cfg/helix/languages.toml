# TODO: setup DAP
# TODO: setup markdown with marksman/ltex-ls/zk

[language-servers]
zk = { command = "zk", args = [ "lsp" ]}
ltex = { command = "ltex-ls" }

[[language]]
name = "todotxt"
scope = "source.sway"
injection-regex = "todotxt"
file-types = [ "todotxt" ]
roots = [ "todo.todotxt" ]

[[grammar]]
name = "todotxt"
source = { git = "https://github.com/arnarg/tree-sitter-todotxt", rev = "0207f6a4ab6aeafc4b091914d31d8235049a2578"}

[[language]]
name = "python"
auto-format = true
roots = ["pyproject.toml", "poetry.lock"]

[[python.config.pylsp.plugins]]
ruff.enable = true
pylsp-mypy = { enable = true, strict = true }

[[language]]
name = "bash"
auto-format = true
formatter = { command = "shfmt", args = [ "-i", "4"] }

[[language]]
name = "nix"
auto-format = true
formatter = { command = "nixpkgs-fmt" }

[[language]]
name = "yaml"
auto-format = true
formatter = { command = "prettier", args = [ "--parser", "yaml" ] }

[[language]]
name = "json"
auto-format = true
formatter = { command = "prettier", args = [ "--parser", "json" ] }

[[language]]
name = "markdown"
auto-format = true
language-server = { command = "ltex-ls" }
formatter = { command = "prettier", args = [ "--parser", "markdown"] }

[[language]]
name = "html"
formatter = { command = 'prettier', args = [ "--parser", "html" ] }

[[language]]
name = "hcl"
auto-format = true
formatter = { command = "terraform", args = [ "fmt", "-" ] }

[[language]]
name = "tfvars"
auto-format = true
formatter = { command = "terraform", args = [ "fmt", "-" ] }

[[language]]
name = "lua"
auto-format = true
formatter = { command = "lua-format", args = [ "-i" ] }

[[language]]
name = "scala"
auto-format = true
formatter = { command = "scalafmt", args = [ "--stdin" ] }